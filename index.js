import{i as a,a as E,S as M}from"./assets/vendor-Fd3mU3Z4.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function n(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(t){if(t.ep)return;t.ep=!0;const o=n(t);fetch(t.href,o)}})();const S="48661000-87492d5612d6e41eb1a42ef3d",R="https://pixabay.com/api/";async function f(e,s=1,n=40){if(!e||typeof e!="string"||e.trim()==="")return a.warning({title:"Warning",message:"Please enter a search term!",position:"topRight"}),null;try{const r=await E.get(R,{params:{key:S,q:encodeURIComponent(e),image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:n,page:s}});if(console.log("API Response:",r.data),r.status!==200)throw new Error(`API error: ${r.status}`);return!r.data.hits||r.data.hits.length===0?(a.info({title:"Info",message:"No images found for your search!",position:"topRight"}),null):{hits:r.data.hits,totalHits:Math.min(r.data.totalHits,500)}}catch(r){return console.error("Error fetching images:",r),a.error({title:"Error",message:"Failed to load images. Please try again.",position:"topRight"}),null}}const g=document.querySelector(".gallery"),h=document.querySelector(".load-more"),d=document.querySelector(".end-message")||$(),I=new M(".gallery a",{captionsData:"alt",captionDelay:250});function $(){const e=document.createElement("p");return e.classList.add("end-message"),e.textContent="We're sorry, but you've reached the end of search results.",e.style.display="none",g.after(e),e}function y(){g.innerHTML=""}function v(e,s=!1){if(!Array.isArray(e)||e.length===0)return;s||y();const n=e.map(({webformatURL:r,largeImageURL:t,tags:o,likes:i,views:b,comments:L,downloads:P})=>`
    <div class="gallery-item">
      <a href="${t}">
        <img src="${r}" alt="${o}" loading="lazy" />
      </a>
      <div class="image-info">
        <div class="item"><span class="label">Likes:</span> <span class="count">${i}</span></div>
        <div class="item"><span class="label">Views:</span> <span class="count">${b}</span></div>
        <div class="item"><span class="label">Comments:</span> <span class="count">${L}</span></div>
        <div class="item"><span class="label">Downloads:</span> <span class="count">${P}</span></div>
      </div>
    </div>`).join("");g.insertAdjacentHTML("beforeend",n),I.refresh(),A()}function A(){const e=document.querySelector(".gallery-item");if(e){const s=e.getBoundingClientRect().height;window.scrollBy({top:s*2,behavior:"smooth"})}}function B(){h.style.display="block"}function m(){h.style.display="none"}function H(){d&&(d.style.display="block")}function w(){d&&(d.style.display="none")}const q=document.querySelector(".search-form"),O=document.querySelector(".load-more");let c="",l=1;const u=40;let p=0;m();w();q.addEventListener("submit",async e=>{if(e.preventDefault(),c=e.target.elements.searchQuery.value.trim().toLowerCase(),!c){a.warning({title:"Warning",message:"Please enter a search term!",position:"topRight"});return}l=1,y(),m(),w();try{const s=await f(c,l,u);if(!s||!s.hits||s.hits.length===0){a.info({title:"Info",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"});return}p=Math.min(s.totalHits,500),v(s.hits),p>u&&B()}catch{a.error({title:"Error",message:"Something went wrong. Please try again later.",position:"topRight"})}});O.addEventListener("click",async()=>{l+=1;try{const e=await f(c,l,u);e&&e.hits.length>0&&v(e.hits,!0),l*u>=p&&(m(),H())}catch{a.error({title:"Error",message:"Failed to load more images. Please try again.",position:"topRight"})}});
//# sourceMappingURL=index.js.map

import{S as P,i}from"./assets/vendor-Dg3uDB0e.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))c(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&c(a)}).observe(document,{childList:!0,subtree:!0});function o(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function c(t){if(t.ep)return;t.ep=!0;const s=o(t);fetch(t.href,s)}})();const m=document.querySelector(".gallery");let I=new P(".gallery a",{captionsData:"alt",captionDelay:250});function g(e,r=!1){if(!e||e.length===0){$("Sorry, there are no images matching your search query. Please try again!");return}const o=e.map(({webformatURL:c,largeImageURL:t,tags:s,likes:a,views:b,comments:w,downloads:E,id:S})=>`
    <div class="gallery-item" data-id="${S}">
      <a href="${t}">
        <img src="${c}" alt="${s}" loading="lazy" />
      </a>
      <div class="image-info">
        <div class="item"><span class="label">Likes</span><span class="count">${a}</span></div>
        <div class="item"><span class="label">Views</span><span class="count">${b}</span></div>
        <div class="item"><span class="label">Comments</span><span class="count">${w}</span></div>
        <div class="item"><span class="label">Downloads</span><span class="count">${E}</span></div>
      </div>
    </div>
  `).join("");r||(m.innerHTML=""),m.insertAdjacentHTML("beforeend",o),I.refresh(),M()}function M(){const e=document.querySelector(".gallery-item");if(e){const r=e.getBoundingClientRect().height;window.scrollBy({top:r*2,behavior:"smooth"})}}function $(e){i.error({title:"Error",message:e,position:"topRight"})}function p(){const e=document.createElement("p");e.classList.add("end-message"),e.textContent="We're sorry, but you've reached the end of search results.",m.after(e)}function y(){const e=document.querySelector(".load-more");e&&(e.style.display="none")}const q=document.querySelector(".search-form"),h=document.querySelector(".load-more");let n="",l=1;const u=40;let d=0,f=new Set;function v(){document.getElementById("loading-overlay").style.display="flex"}function L(){document.getElementById("loading-overlay").style.display="none"}q.addEventListener("submit",async e=>{if(e.preventDefault(),n=e.target.elements.searchQuery.value.trim(),!n||n.trim()===""){i.warning({title:"Warning",message:"Please enter a valid search term!",position:"topRight"});return}l=1,d=0,f.clear(),y(),v();try{const r=await fetchImages(n,l,u);r&&r.hits.length>0?(g(r.hits),d=r.totalHits,d>u?h.style.display="block":p()):i.error({title:"Error",message:"Sorry, no images match your search. Please try again!",position:"topRight"})}catch{i.error({title:"Error",message:"Failed to load images. Please try again.",position:"topRight"})}finally{L()}});h.addEventListener("click",async()=>{l+=1,v();try{const e=await fetchImages(n,l,u);if(e&&e.hits.length>0){const r=e.hits.filter(o=>!f.has(o.id));g(r,!0),r.forEach(o=>f.add(o.id)),l*u>=d&&(y(),p())}}catch{i.error({title:"Error",message:"Failed to load more images. Please try again.",position:"topRight"})}finally{L()}});
//# sourceMappingURL=index.js.map

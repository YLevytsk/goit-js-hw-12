import{i as d,a as S,S as B}from"./assets/vendor-Fd3mU3Z4.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const l of r.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&s(l)}).observe(document,{childList:!0,subtree:!0});function n(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=n(o);fetch(o.href,r)}})();const A="48661000-87492d5612d6e41eb1a42ef3d",H="https://pixabay.com/api/";async function p(e,t=1,n=40){if(!e||typeof e!="string"||e.trim()==="")return d.warning({title:"Warning",message:"Please enter a search term!",position:"topRight"}),null;try{const s=await S.get(H,{params:{key:A,q:encodeURIComponent(e),image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:n,page:t}});if(console.log("API Response:",s.data),s.status!==200)throw new Error(`API error: ${s.status}`);return!s.data.hits||s.data.hits.length===0?(d.info({title:"Info",message:"No images found for your search!",position:"topRight"}),null):{hits:s.data.hits,totalHits:Math.min(s.data.totalHits,500)}}catch(s){return console.error("Error fetching images:",s),d.error({title:"Error",message:"Failed to load images. Please try again.",position:"topRight"}),null}}const h=document.querySelector(".gallery"),q=new B(".gallery a",{captionsData:"alt",captionDelay:250}),b=document.querySelector(".load-more"),L=document.querySelector(".end-message");function E(){h.innerHTML=""}function y(e,t=!1,n){if(!Array.isArray(e)||e.length===0)return;t||(E(),i(),g());const s=e.map(({webformatURL:o,largeImageURL:r,tags:l,likes:$,views:I,comments:P,downloads:R})=>`
    <div class="gallery-item">
      <a href="${r}">
        <img src="${o}" alt="${l}" loading="lazy" />
      </a>
      <div class="image-info">
        <div class="item"><span class="label">Likes</span><span class="count">${$}</span></div>
        <div class="item"><span class="label">Views</span><span class="count">${I}</span></div>
        <div class="item"><span class="label">Comments</span><span class="count">${P}</span></div>
        <div class="item"><span class="label">Downloads</span><span class="count">${R}</span></div>
      </div>
    </div>`).join("");if(h.insertAdjacentHTML("beforeend",s),q.refresh(),t){const o=document.querySelector(".gallery-item");if(o){const r=o.getBoundingClientRect().height;window.scrollBy({top:r*2,behavior:"smooth"})}}h.children.length>=n?(i(),m()):(M(),g())}function M(){b.style.display="block"}function i(){b.style.display="none"}function m(){L.style.display="block"}function g(){L.style.display="none"}const O=document.querySelector(".search-form"),x=document.querySelector(".load-more");let c="",u=1;const f=40;let a=0;i();g();function v(){document.getElementById("loading-overlay").style.display="flex"}function w(){document.getElementById("loading-overlay").style.display="none"}async function F(){v();try{const e=["nature","technology","art","food","travel"],t=e[Math.floor(Math.random()*e.length)];console.log(`Fetching random images for: ${t}`);const n=await p(t,1,f);if(!n||!n.hits||n.hits.length===0)return;console.log(`Fetched ${n.hits.length} random images`),y(n.hits,!1,n.totalHits)}catch(e){console.error("Error fetching random images:",e)}finally{w()}}F();O.addEventListener("submit",async e=>{if(e.preventDefault(),c=e.target.elements.searchQuery.value.trim(),!c){d.warning({title:"Warning",message:"Please enter a search term!",position:"topRight"});return}v(),u=1,E(),i(),g();try{const t=await p(c,u,f);if(!t||!t.hits||t.hits.length===0){d.info({title:"Info",message:"No images found for your query.",position:"topRight"});return}a=Math.min(t.totalHits,500),console.log(`Fetched ${t.hits.length} images for query: ${c}`),y(t.hits,!1,a),a>f&&M()}catch(t){console.error("Error fetching search images:",t)}finally{w()}});x.addEventListener("click",async()=>{if(gallery.children.length>=a){i(),m();return}u+=1,v();try{const e=await p(c,u,f);e&&e.hits.length>0&&y(e.hits,!0,a),gallery.children.length>=a&&(i(),m())}catch(e){console.error("Error loading more images:",e)}finally{w()}});
//# sourceMappingURL=index.js.map

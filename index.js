import{S as P,i as c}from"./assets/vendor-Dg3uDB0e.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))l(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&l(a)}).observe(document,{childList:!0,subtree:!0});function o(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function l(t){if(t.ep)return;t.ep=!0;const r=o(t);fetch(t.href,r)}})();const m=document.querySelector(".gallery");let I=new P(".gallery a",{captionsData:"alt",captionDelay:250});function g(e,s=!1){if(e.length===0){M("Sorry, no images match your search. Please try again!");return}const o=e.map(({webformatURL:l,largeImageURL:t,tags:r,likes:a,views:b,comments:w,downloads:E,id:S})=>`
    <div class="gallery-item" data-id="${S}">
      <a href="${t}">
        <img src="${l}" alt="${r}" loading="lazy" />
      </a>
      <div class="image-info">
        <div class="item"><span class="label">Likes</span><span class="count">${a}</span></div>
        <div class="item"><span class="label">Views</span><span class="count">${b}</span></div>
        <div class="item"><span class="label">Comments</span><span class="count">${w}</span></div>
        <div class="item"><span class="label">Downloads</span><span class="count">${E}</span></div>
      </div>
    </div>
  `).join("");s||(m.innerHTML=""),m.insertAdjacentHTML("beforeend",o),I.refresh(),$()}function $(){const e=document.querySelector(".gallery-item");if(e){const s=e.getBoundingClientRect().height;window.scrollBy({top:s*2,behavior:"smooth"})}}function M(e){iziToast.error({title:"Error",message:e,position:"topRight"})}function p(){const e=document.createElement("p");e.classList.add("end-message"),e.textContent="We're sorry, but you've reached the end of search results.",m.after(e)}function y(){const e=document.querySelector(".load-more");e&&(e.style.display="none")}const B=document.querySelector(".search-form"),h=document.querySelector(".load-more");let i="",n=1;const u=40;let d=0,f=new Set;function v(){document.getElementById("loading-overlay").style.display="flex"}function L(){document.getElementById("loading-overlay").style.display="none"}B.addEventListener("submit",async e=>{if(e.preventDefault(),i=e.target.elements.searchQuery.value.trim(),!i||i.trim()===""){c.warning({title:"Warning",message:"Please enter a valid search term!",position:"topRight"});return}n=1,d=0,f.clear(),y(),v();try{const s=await fetchImages(i,n,u);s&&s.hits.length>0?(g(s.hits),d=s.totalHits,d>u?h.style.display="block":p()):c.error({title:"Error",message:"Sorry, no images match your search. Please try again!",position:"topRight"})}catch{c.error({title:"Error",message:"Failed to load images. Please try again.",position:"topRight"})}finally{L()}});h.addEventListener("click",async()=>{n+=1,v();try{const e=await fetchImages(i,n,u);if(e&&e.hits.length>0){const s=e.hits.filter(o=>!f.has(o.id));g(s,!0),s.forEach(o=>f.add(o.id)),n*u>=d&&(y(),p())}}catch{c.error({title:"Error",message:"Failed to load more images. Please try again.",position:"topRight"})}finally{L()}});
//# sourceMappingURL=index.js.map

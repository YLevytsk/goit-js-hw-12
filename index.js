import{i as d,a as R,S as A}from"./assets/vendor-Fd3mU3Z4.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function n(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(s){if(s.ep)return;s.ep=!0;const o=n(s);fetch(s.href,o)}})();const S="48661000-87492d5612d6e41eb1a42ef3d",O="https://pixabay.com/api/";async function p(e,t=1,n=40){if(!e||typeof e!="string"||e.trim()==="")return d.warning({title:"Warning",message:"Please enter a search term!",position:"topRight"}),null;try{const r=await R.get(O,{params:{key:S,q:encodeURIComponent(e),image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:n,page:t}});if(console.log("API Response:",r.data),r.status!==200)throw new Error(`API error: ${r.status}`);return!r.data.hits||r.data.hits.length===0?(d.info({title:"Info",message:"No images found for your search!",position:"topRight"}),null):{hits:r.data.hits,totalHits:Math.min(r.data.totalHits,500)}}catch(r){return console.error("Error fetching images:",r),d.error({title:"Error",message:"Failed to load images. Please try again.",position:"topRight"}),null}}const f=document.querySelector(".gallery"),x=new A(".gallery a",{captionsData:"alt",captionDelay:250}),a=document.createElement("p");a.classList.add("end-message");a.textContent="We're sorry, but you've reached the end of search results.";a.style.display="none";f.after(a);function L(){f&&(f.innerHTML="")}function m(e,t=!1){if(!Array.isArray(e)||e.length===0)return;t||L();const n=e.map(({webformatURL:r,largeImageURL:s,tags:o,likes:l,views:P,comments:I,downloads:M})=>`
    <div class="gallery-item">
      <a href="${s}">
        <img src="${r}" alt="${o}" loading="lazy" />
      </a>
      <div class="image-info">
        <div class="item"><span class="label">Likes</span><span class="count">${l}</span></div>
        <div class="item"><span class="label">Views</span><span class="count">${P}</span></div>
        <div class="item"><span class="label">Comments</span><span class="count">${I}</span></div>
        <div class="item"><span class="label">Downloads</span><span class="count">${M}</span></div>
      </div>
    </div>`).join("");f.insertAdjacentHTML("beforeend",n),x.refresh()}function b(){a&&(a.style.display="block")}function w(){a&&(a.style.display="none")}const E=document.querySelector(".gallery"),H=document.querySelector(".search-form"),i=document.querySelector(".load-more"),$=document.getElementById("loading-overlay");let c="",g=1;const u=40;let h=0;i.style.display="none";w();function y(){$.style.display="flex"}function v(){$.style.display="none"}async function q(){y();try{const e=["nature","technology","art","food","travel"],t=e[Math.floor(Math.random()*e.length)];console.log(`Fetching random images for: ${t}`);const n=await p(t,1,u);if(!n||!n.hits||n.hits.length===0)return;console.log(`Fetched ${n.hits.length} random images`),m(n.hits)}catch(e){console.error("Error fetching random images:",e)}finally{v()}}q();H.addEventListener("submit",async e=>{if(e.preventDefault(),c=e.target.elements.searchQuery.value.trim(),!c){d.warning({title:"Warning",message:"Please enter a search term!",position:"topRight"});return}y(),g=1,L(),w(),i.style.display="none";try{const t=await p(c,g,u);if(!t||!t.hits||t.hits.length===0){d.info({title:"Info",message:"No images found for your query.",position:"topRight"});return}h=Math.min(t.totalHits,500),console.log(`Fetched ${t.hits.length} images for query: ${c}`),m(t.hits),h>u&&(i.style.display="block")}catch(t){console.error("Error fetching search images:",t)}finally{v()}});i.addEventListener("click",async()=>{if(E.children.length>=h){i.style.display="none",b();return}g+=1,y();try{const e=await p(c,g,u);e&&e.hits.length>0&&m(e.hits,!0),E.children.length>=h&&(i.style.display="none",b())}catch(e){console.error("Error loading more images:",e)}finally{v()}});
//# sourceMappingURL=index.js.map

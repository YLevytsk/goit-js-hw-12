import{a as B,S as P,i as b}from"./assets/vendor-CtnHdr7b.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function s(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(r){if(r.ep)return;r.ep=!0;const o=s(r);fetch(r.href,o)}})();const A="48661000-87492d5612d6e41eb1a42ef3d",H="https://pixabay.com/api/";async function m(e,t=1,s=40){try{const n=await B.get(H,{params:{key:A,q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:s,page:t}});if(n.status!==200)throw new Error(`API error: ${n.status}`);return n.data}catch(n){return console.error("Error fetching images:",n),null}}const g=document.querySelector(".gallery"),O=new P(".gallery a",{captionsData:"alt",captionDelay:250}),w=document.querySelector(".load-more"),L=document.querySelector(".end-message");function E(){g.innerHTML=""}function y(e,t=!1,s){if(!Array.isArray(e)||e.length===0)return;t||(E(),i(),d());const n=e.map(({webformatURL:r,largeImageURL:o,tags:l,likes:M,views:q,comments:I,downloads:S})=>`
    <div class="gallery-item">
      <a href="${o}">
        <img src="${r}" alt="${l}" loading="lazy" />
      </a>
      <div class="image-info">
        <div class="item"><span class="label">Likes</span><span class="count">${M}</span></div>
        <div class="item"><span class="label">Views</span><span class="count">${q}</span></div>
        <div class="item"><span class="label">Comments</span><span class="count">${I}</span></div>
        <div class="item"><span class="label">Downloads</span><span class="count">${S}</span></div>
      </div>
    </div>`).join("");if(g.insertAdjacentHTML("beforeend",n),O.refresh(),t){const r=document.querySelector(".gallery-item");if(r){const o=r.getBoundingClientRect().height;window.scrollBy({top:o*2,behavior:"smooth"})}}g.children.length>=s?(i(),h()):($(),d())}function $(){w.style.display="block"}function i(){w.style.display="none"}function h(){L.style.display="block"}function d(){L.style.display="none"}const x=document.querySelector(".search-form"),R=document.querySelector(".load-more");let c="",u=1;const f=40;let a=0;i();d();function p(){document.getElementById("loading-overlay").style.display="flex"}function v(){document.getElementById("loading-overlay").style.display="none"}async function D(){p();try{const e=["nature","technology","art","food","travel"],t=e[Math.floor(Math.random()*e.length)];console.log(`Fetching random images for: ${t}`);const s=await m(t,1,f);if(!s||!s.hits||s.hits.length===0)return;console.log(`Fetched ${s.hits.length} random images`),y(s.hits,!1,s.totalHits)}catch(e){console.error("Error fetching random images:",e)}finally{v()}}D();x.addEventListener("submit",async e=>{if(e.preventDefault(),c=e.target.elements.searchQuery.value.trim(),!c){b.warning({title:"Warning",message:"Please enter a search term!",position:"topRight"});return}p(),u=1,E(),i(),d();try{const t=await m(c,u,f);if(!t||!t.hits||t.hits.length===0){b.info({title:"Info",message:"No images found for your query.",position:"topRight"});return}a=Math.min(t.totalHits,500),console.log(`Fetched ${t.hits.length} images for query: ${c}`),y(t.hits,!1,a),a>f&&$()}catch(t){console.error("Error fetching search images:",t)}finally{v()}});R.addEventListener("click",async()=>{if(gallery.children.length>=a){i(),h();return}u+=1,p();try{const e=await m(c,u,f);e&&e.hits.length>0&&y(e.hits,!0,a),gallery.children.length>=a&&(i(),h())}catch(e){console.error("Error loading more images:",e)}finally{v()}});
//# sourceMappingURL=index.js.map

import{i as n,a as I,S as L}from"./assets/vendor-D0cagnvz.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))c(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&c(a)}).observe(document,{childList:!0,subtree:!0});function r(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function c(o){if(o.ep)return;o.ep=!0;const s=r(o);fetch(o.href,s)}})();const b="48661000-87492d5612d6e41eb1a42ef3d",P="https://pixabay.com/api/";async function g(t){if(!t||t.trim()==="")return n.warning({title:"Warning",message:"Please enter a search term!",position:"topRight"}),[];try{const e=await I.get(P,{params:{key:b,q:encodeURIComponent(t),image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:20}});if(console.log("API Response:",e.data),e.status!==200)throw new Error(`API error: ${e.status}`);return e.data.totalHits>0?e.data.hits:(n.warning({title:"Info",message:"No images found. Please try another search term.",position:"topRight"}),[])}catch(e){return console.error("Error fetching images:",e),n.error({title:"Error",message:"Failed to load images. Please try again.",position:"topRight"}),[]}}const l=document.querySelector(".gallery"),$=new L(".gallery a",{captionsData:"alt",captionDelay:250});async function m(t){try{if(!t||typeof t!="string"){console.error("Expected a string, but received:",t),i();return}const e=t.trim();if(e===""){i();return}l.innerHTML="";const r=await g(e);if(!r||!r.hits||!Array.isArray(r.hits)||r.hits.length===0){console.error("Unexpected response from fetchImages:",r),i();return}const o=r.hits.map(({webformatURL:s,largeImageURL:a,tags:h,likes:y,views:v,comments:E,downloads:w})=>`
      <div class="gallery-item">
        <a href="${a}">
          <img src="${s}" alt="${h}" loading="lazy" />
        </a>
        <div class="image-info">
          <div class="item"><span class="label">Likes</span><span class="count">${y}</span></div>
          <div class="item"><span class="label">Views</span><span class="count">${v}</span></div>
          <div class="item"><span class="label">Comments</span><span class="count">${E}</span></div>
          <div class="item"><span class="label">Downloads</span><span class="count">${w}</span></div>
        </div>
      </div>`).join("");l.innerHTML=o,$.refresh()}catch(e){console.error("Error fetching images:",e),i()}}function i(){l.innerHTML=`
    <p class="error-message">
      Sorry, no images match your search. Please try again!
    </p>
  `}const d=document.querySelector(".search-form"),u=document.querySelector('input[name="searchQuery"]');d&&u?d.addEventListener("submit",t=>{var r;t.preventDefault();const e=(r=u.value)==null?void 0:r.trim();if(!e){console.error("Invalid search input:",e),i();return}m(e)}):console.error("Search form or input not found in DOM");document.querySelector(".gallery");const R=document.querySelector(".search-form");function p(){document.getElementById("loading-overlay").style.display="flex"}function f(){document.getElementById("loading-overlay").style.display="none"}async function S(){p();try{const t=["nature","technology","art","food","travel"],e=t[Math.floor(Math.random()*t.length)];console.log(`Fetching images for: ${e}`);const r=await g(e);if(!r||!r.hits||r.hits.length===0){n.warning({title:"Info",message:`No images found for query: ${e}. Try another one.`,position:"topRight"});return}console.log(`Fetched ${r.hits.length} images for query: ${e}`),m(r.hits)}catch(t){n.error({title:"Error",message:"Failed to load images. Please try again.",position:"topRight"}),console.error("Error fetching random images:",t)}finally{f()}}S();R.addEventListener("submit",async t=>{t.preventDefault();const e=t.target.elements.searchQuery.value.trim();if(!e){n.warning({title:"Warning",message:"Please enter a search term!",position:"topRight"});return}p();try{const r=await g(e);if(!r||!r.hits||r.hits.length===0){n.info({title:"Info",message:"No images found for your query.",position:"topRight"});return}console.log(`Fetched ${r.hits.length} images for query: ${e}`),m(r.hits)}catch(r){n.error({title:"Error",message:"Failed to load images. Please try again.",position:"topRight"}),console.error("Error fetching search images:",r)}finally{f()}});
//# sourceMappingURL=index.js.map
